<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" dir="ltr" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" class="js">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


  <title>{TITLE}</title>
<meta name="description" content="{DESCRIPTION}">
<meta name="revisit-after" content="1 day">
<meta name="keywords" content="{KEYWORD}">



  


<link rel="stylesheet" type="text/css" href="{CSS_FILE}" media="all">
</head>
<body class="page not-front not-logged-in node-type-og-webpage page-healthy-living-and-eating-families section-healthy-living-and-eating-families two-sidebars page-panels">

  
  {GRAFEED}<div id="page-wrapper"><div id="page">

    <div style="height: 143px;" id="header"><div class="section clearfix">

           
      
              <div id="name-and-slogan">
             <div id="site-name"><br /><strong>
                <a href="#" title="Home" rel="home"><span>{UCKEYWORD}</span></a>
              </strong></div>
                      
                  </div><!-- /#name-and-slogan -->
      
      
      <div class="region region-header">
    <div id="block-menu_block-2" class="clearfix block block-menu_block first region-odd odd region-count-1 count-7">
      <h2 class="title">Global Navigation</h2>
  
  <div class="content">
    <div class="menu_block_wrapper menu-block-2 menu-name-menu-globalnavigation parent-mlid-0 menu-level-1">
  <ul class="menu">
<li class="leaf menu-mlid-2721">{LINK_1}</li>
</ul></div>
  </div>

  </div><!-- /.block -->
  <div id="block-block-2" class="clearfix block block-block region-even even region-count-2 count-8">
  
  <div class="content">
    
  </div>

  </div><!-- /.block -->
</div><!-- /.region -->

    </div></div><!-- /.section, /#header -->

    <div id="main-wrapper"><div id="main" class="clearfix with-navigation">

      <div id="content" class="column"><div class="section">

        
        
                          
          <h1 class="title">{UCKEYWORD}</h1>
                                
        
        <div id="content-area">
          <div id="node" class="node node-type-og-webpage build-mode-full clearfix">
  
  
  
  
  <div class="content">

{LINK_4} 
{TEXT} {LINK_7}
<hr>


<br>
  </div>

  </div><!-- /.node -->
        </div>

        <div class="region region-content-bottom">
    <div style="display: none;" id="block-views-ogsite_page_blocks-block_4" class="clearfix block block-views first region-odd even region-count-1 count-6">
  
  <div class="content">
    <div class="views_view view view-ogsite-page-blocks view-id-ogsite_page_blocks view-display-id-block_4 view-dom-id-50=">
  
  
  
  
      <div class="view-content">
        <div class="views-row views-row-1 views-row-odd views-row-first views-row-last">
      </div>
    </div>
  
  
  
  
  
  
</div><!-- /.view -->
  </div>

  </div><!-- /.block -->
</div><!-- /.region -->

        
      </div></div><!-- /.section, /#content -->

              <div id="navigation"><div class="section clearfix">

          
          <div class="region region-navigation">
    <div id="block-megamenu-1" class="clearfix block block-megamenu first region-odd odd region-count-1 count-5">
  
  <div class="content">
    <ul id="megamenu-menu-families-menu" class="megamenu-menu horizontal megamenu-skin-extension_main"><li id="megamenu-mlid-4263" class="megamenu-parent megamenu-parent-0 odd half-1 leaf-0 first first"><h2 class="megamenu-parent-title"><a href="#">Home</a></h2></li>
<li id="megamenu-mlid-4264" class="megamenu-parent megamenu-parent-1 even half-1 leaf-1"><h2 class="megamenu-parent-title">Health</h2></li>
<li id="megamenu-mlid-4266" class="megamenu-parent megamenu-parent-2 odd half-1 leaf-2 active active-trail"></li>
</ul>  </div>

  </div><!-- /.block -->
</div><!-- /.region -->

        </div></div><!-- /.section, /#navigation -->
      
      <div class="region region-sidebar-first column sidebar"><div class="section">
    <div id="block-menu_block-6" class="clearfix block block-menu_block first region-odd odd region-count-1 count-1">
      <h2 class="title"></h2>
  
  <div class="content">
    <div class="menu_block_wrapper menu-block-6 menu-name-menu-families-menu parent-mlid-0 menu-level-4">
  <ul class="menu"><li class="expanded first menu-mlid-4769">{LINK_2}<ul class="menu"><li class="leaf first menu-mlid-4770"></li>
<li class="expanded menu-mlid-6062"><ul class="menu"><li class="leaf first last menu-mlid-11134"></li>
</ul></li>
<li class="leaf menu-mlid-4772">{LINK_6}</li>
</ul></li>
</ul></div>
  </div>

  </div><!-- /.block -->
</div></div><!-- /.section, /.region -->

      <div class="region region-sidebar-second column sidebar"><div class="section">
    <div id="block-views-ogsite_page_blocks-block_1" class="clearfix block block-views first region-odd even region-count-1 count-2">
  
  <div class="content">
    <div class="views_view view view-ogsite-page-blocks view-id-ogsite_page_blocks view-display-id-block_1 view-dom-id-1">
  
  
  
  
      <div class="view-content">
        <div class="views-row views-row-1 views-row-odd views-row-first views-row-last">
      
  <div class="views-field-field-sidebar-area1-value">
                <div class="field-content"><h6>
	Connect with Us</h6>
<p> Blogs</p>
<p>Hotlines</p>
<ul>
	<li>
		</li>
	<li>
		</li>
</ul>
<p>&nbsp;</p>
<p></p>
</div>
  </div>
  </div>
    </div>
  
  
  
  
  
  
</div><!-- /.view -->
  </div>

  </div><!-- /.block -->
  <div id="block-views-ogsite_page_blocks-block_2" class="clearfix block block-views region-even odd region-count-2 count-3">
  
  <div class="content">
    <div class="views_view view view-ogsite-page-blocks view-id-ogsite_page_blocks view-display-id-block_2 view-dom-id-b2a2cd1">
  
  
  
  
      <div class="view-content">
        <div class="views-row views-row-1 views-row-odd views-row-first views-row-last">
      
  <div class="views-field-field-sidebar-area2-value">
                <div class="field-content"><h6>
	From our blog...</h6>
</div>
  </div>
  </div>
    </div>
  
  
  
  
  
  
</div><!-- /.view -->
  </div>

  </div><!-- /.block -->
  <div id="block-views-ogsite_page_blocks-block_3" class="clearfix block block-views region-odd even region-count-3 count-4">
  
  <div class="content">
    <div class="views_view view view-ogsite-page-blocks view-id-ogsite_page_blocks view-display-id-block_3 view-dom-id-961c5322eedd67d3da6809dcbffd1f4c">
  
  
  
  
      <div class="view-content">
        <div class="views-row views-row-1 views-row-odd views-row-first views-row-last">
      
  <div class="views-field-field-sidebar-area3-value">
                <div class="field-content"><h6>
	FAQs from eXtension</h6>
<br></div>
  </div>
  </div>
    </div>
  
  
  
  
  
  
</div><!-- /.view -->
  </div>

  </div><!-- /.block -->
</div></div><!-- /.section, /.region -->
<div id="add-this" class="float-right">
          

      	</div>
    </div></div><!-- /#main, /#main-wrapper -->

          <div id="footer" class="clearfix clear"><div class="section">

        
        
        <div class="region region-footer">
    <div id="block-menu_block-3" class="clearfix block block-menu_block first region-odd odd region-count-1 count-9">
      <h2 class="title">Bottom Navigation</h2>
  
  <div class="content">
    <div class="menu_block_wrapper menu-block-3 menu-name-menu-bottomnavigation parent-mlid-0 menu-level-1">
  <ul class="menu"><li class="expanded first menu-mlid-2819">{LINK_5}</li>

</ul></div>
  </div>

  </div><!-- /.block -->
  <div id="block-block-1" class="clearfix block block-block region-even even region-count-2 count-10">
  
  <div class="content">

  </div><!-- /.block -->
  <div id="block-block-25" class="clearfix block block-block region-odd odd region-count-3 count-11">
  
  <div class="content">
    <div id="familiesforstaff">{LINK_3}</div>  </div>

  </div><!-- /.block -->
</div><!-- /.region -->
       
 <div id="footerwrapper">
      <div class="footerwordmark">

      </div>
      <div class="footerlinks">
<p>Copyright &copy 2015 | </p>
</div>
</div>

<div id="googlesearch">


<form action="" id="cse-search-box">
  <div>
    <input name="cx" value="010gqdo" type="hidden">
    <input name="cof" value="FORID:11" type="hidden">
    <input name="ie" value="UTF-8" type="hidden">
    <input value="" spellcheck="false" dir="ltr" style="border: 1px solid rgb(126, 157, 185); padding: 2px; outline: medium none;" name="as_q" id="q" autocomplete="off" size="31" placeholder="Search" type="text">
    <input name="sa" value="" type="submit">
  </div>
<input name="ss" type="hidden"></form>


</div>
      </div></div><!-- /.section, /#footer -->
    
  </div></div><!-- /#page, /#page-wrapper -->

  
    





</body>
</html>